<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.3" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="3.8.3">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.3">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Proxies" Version="3.1.3" />
    <PackageReference Include="EntityFramework" Version="6.4.0" />
    <PackageReference Include="NUnit" Version="3.12.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Remove="ClientApp\src\components\FetchData.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\NavMenu.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\App.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\types\Patterns.ts" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sidebar.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\types\Patterns.ts" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sidebar.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\types\Patterns.ts" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sidebar.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Buttons\UndoButton.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\types\Patterns.ts" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sidebar.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Buttons\UndoButton.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sketchs\SketchPatternElement.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sketchs\SketchDrawer.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Buttons\CloseButton.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Layouts\FabLayout.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Helpers\hooks.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\types\Patterns.ts" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sidebar.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Buttons\UndoButton.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sketchs\SketchPatternElement.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sketchs\SketchDrawer.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Buttons\CloseButton.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Layouts\FabLayout.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Helpers\hooks.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Layouts\SnackbarContentLayout.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\types\Patterns.ts" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sidebar.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Buttons\UndoButton.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sketchs\SketchPatternElement.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Sketchs\SketchDrawer.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Buttons\CloseButton.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Layouts\FabLayout.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Helpers\hooks.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Layouts\SnackbarContentLayout.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\components\Helpers\strings.ts" />
    <TypeScriptCompile Remove="ClientApp\src\types\Commons.ts" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Models\" />
    <Folder Include="DAL\" />
    <Folder Include="DTO\" />
    <Folder Include="Mappers\" />
    <Folder Include="Tests\Mappers\" />
    <Folder Include="Helpers\" />
    <Folder Include="Tests\With\" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="ClientApp\package-lock.json" />
    <None Remove="ClientApp\src\components\UI\Loader\Loader.svg" />
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
